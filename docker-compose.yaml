services:
  frontend:
    container_name: graspos-frontend
    build:
      context: .
      dockerfile: ${FRONTEND_DOCKERFILE:-./frontend/Dockerfile.dev}
    env_file:
      - .env
    ports:
      - "${FRONTEND_HOST_PORT:-5173}:${FRONTEND_PORT:-5173}"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: always
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      graspos-backend:
        condition: service_started
    networks:
      - api_bridge
    profiles:
      - dev

  graspos-frontend:
    container_name: graspos-frontend
    build:
      context: .
      dockerfile: ./frontend/Dockerfile.prod
    env_file:
      - .env
    ports:
      - "${FRONTEND_HOST_PORT:-5173}:80"
    restart: always
    depends_on:
      graspos-backend:
        condition: service_started
    networks:
      - api_bridge
    profiles:
      - prod

  graspos-backend:
    container_name: graspos-backend
    build: backend/
    restart: always
    depends_on:
      mongodb:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "${REACT_APP_BACKEND_HOST_PORT:-8000}:8080"
    volumes:
      - ./backend/app:/code/app
    networks:
      - api_bridge

  mongodb:
    container_name: mongodb
    image: ${MONGO_IMAGE}
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "which mongosh && mongosh --eval \"db.adminCommand('ping')\" || mongo --eval \"db.adminCommand('ping')\""]
      interval: 10s
      timeout: 10s
      retries: 5
    ports:
      - "${MONGO_CONTAINER_PORT:-27017}:27017"
    env_file:
      - .env
    volumes:
      - ./mongodb/db:/data/db:rw
      - ./mongodb/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    networks:
      - api_bridge

networks:
  api_bridge:
    driver: bridge
